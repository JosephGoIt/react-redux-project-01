{"version":3,"file":"static/js/858.062ecd30.chunk.js","mappings":"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","sources":["javascripts/getRandomNumber.js","webpack://react-homework-template/./src/components/BgImageWrapper/BgImageWrapper.module.css?8cad","components/BgImageWrapper/BgImageWrapper.jsx","components/PieChart/PieChart.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://react-homework-template/./src/components/CatergoriesModal/CategoriesModal.module.css?3238","components/CatergoriesModal/CategoriesModal.jsx","webpack://react-homework-template/./src/components/TransactionForm/TransactionForm.module.css?2486","components/TransactionForm/TransactionForm.jsx","javascripts/countCategories.js","javascripts/getCurrentMonth.js","javascripts/getColors.js","webpack://react-homework-template/./src/components/TransactionsChart/TransactionsChart.module.css?4b74","components/TransactionsChart/TransactionsChart.jsx","webpack://react-homework-template/./src/components/TransactionsTotal/TransactionsTotal.module.css?148f","components/TransactionsTotal/TransactionsTotal.jsx","webpack://react-homework-template/./src/components/UniversalButton/UniversalButton.module.css?5d74","components/UniversalButton/UniversalButton.jsx","javascripts/getPath.js","javascripts/getCurrency.js","javascripts/getFormattedDate.js","javascripts/getFormattedTime.js","schemas/validationSchema.js"],"sourcesContent":["export const randomNumber = () => {\n    const randomNumber = Math.random() * (999 - 100) + 100;\n    return randomNumber.toFixed(3);\n  };\n  export const randomPercentage = () => Math.random() * (100 - 1) + 1;","// extracted by mini-css-extract-plugin\nexport default {\"containerImg\":\"BgImageWrapper_containerImg__2XDcO\",\"containerSvg\":\"BgImageWrapper_containerSvg__wChVN\",\"icon\":\"BgImageWrapper_icon__Y-tXs\",\"containerText\":\"BgImageWrapper_containerText__dogbM\",\"moveBox\":\"BgImageWrapper_moveBox__FESZv\",\"containerBalance\":\"BgImageWrapper_containerBalance__+jgEq\",\"text\":\"BgImageWrapper_text__fXYZe\",\"balance\":\"BgImageWrapper_balance__6EXKP\",\"containerPercent\":\"BgImageWrapper_containerPercent__ovNOW\",\"percent\":\"BgImageWrapper_percent__8LxOt\"};","import React, { useState, useRef, useEffect } from 'react';\n\nimport { Icon } from '../Icon/Icon';\nimport { randomNumber, randomPercentage } from '../../javascripts/getRandomNumber';\nimport s from './BgImageWrapper.module.css';\n\nexport const BgImageWrapper = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [animationDuration] = useState(15);\n  const [randomSum, setRandomSum] = useState(0);\n  const [randomPercent, setRandomPercent] = useState(0);\n  const animationRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const viewportWidthRef = useRef(window.innerWidth);\n\n  useEffect(() => {\n    setRandomSum(randomNumber());\n    setRandomPercent(randomPercentage());\n  }, [currentStep]);\n\n  const handleAnimationStart = () => {\n    const viewportWidth = window.innerWidth;\n    viewportWidthRef.current = viewportWidth;\n\n    if (viewportWidth < 768) {\n      return;\n    }\n\n    startTimeRef.current = performance.now();\n    animationRef.current = requestAnimationFrame(updateAnimationProgress);\n  };\n\n  const updateAnimationProgress = () => {\n    const elapsedTime = performance.now() - startTimeRef.current;\n    const percentage = (elapsedTime / (animationDuration * 1000)) * 100;\n\n    // Check if viewport width has changed during the animation\n    if (\n      viewportWidthRef.current !== window.innerWidth &&\n      window.innerWidth < 768\n    ) {\n      return;\n    }\n\n    updateCurrentStep(percentage);\n\n    animationRef.current = requestAnimationFrame(updateAnimationProgress);\n  };\n\n  const updateCurrentStep = percentage => {\n    setCurrentStep(prevStep => {\n      const newStep = Math.ceil(percentage / 12.5);\n      return newStep !== prevStep ? newStep : prevStep;\n    });\n  };\n\n  return (\n    <div className={s.containerImg}>\n      <div className={s.containerText} onAnimationStart={handleAnimationStart}>\n        <div className={s.containerSvg}>\n          <Icon name=\"arrow-up\" className={s.icon} size=\"18\" />\n        </div>\n        <div className={s.containerBalance}>\n          <p className={s.text}>Your balance</p>\n          <p className={s.balance}>{`$${randomSum}`}</p>\n        </div>\n        <div className={s.containerPercent}>\n          <p className={s.percent}>{`+${randomPercent.toFixed(2)}%`}</p>\n        </div>\n        <p className={s.dynamicText}></p>\n      </div>\n    </div>\n  );\n};","// components/PieChart/PieChart.jsx\nimport { PieChart, Pie, Cell } from 'recharts';\nimport { useMemo } from 'react';\n\nexport const Chart = ({ data }) => {\n  const chartData = useMemo(() => data, [data]);\n\n  return (\n    <PieChart width={292} height={150}>\n      <Pie\n        dataKey=\"value\"\n        data={chartData}\n        startAngle={180}\n        endAngle={0}\n        cy={140}\n        innerRadius={95}\n        outerRadius={145}\n        paddingAngle={-10}\n        cornerRadius={10}\n        fill=\"#15151b\"\n        stroke=\"none\"\n      >\n        {chartData.map((entry, index) => (\n          <Cell\n            style={{ outline: 'none' }}\n            key={`cell-${index}`}\n            fill={entry.color}\n          />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n};\n\nexport default Chart;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"containerImg\":\"RegisterForm_containerImg__NqqMr\",\"containerTitle\":\"RegisterForm_containerTitle__yYLbM\",\"title\":\"RegisterForm_title__EvDyW\",\"text\":\"RegisterForm_text__cFC0o\",\"form\":\"RegisterForm_form__Tv43W\",\"containerForm\":\"RegisterForm_containerForm__OE-P+\",\"input\":\"RegisterForm_input__FsgBz\",\"containerIcon\":\"RegisterForm_containerIcon__sm6ah\",\"icon\":\"RegisterForm_icon__Xn6st\",\"button\":\"RegisterForm_button__B3hFq\",\"containerLink\":\"RegisterForm_containerLink__P82tD\",\"link\":\"RegisterForm_link__xu2eW\",\"span\":\"RegisterForm_span__L8jVb\",\"successInput\":\"RegisterForm_successInput__CuHET\",\"errorInput\":\"RegisterForm_errorInput__LuqSs\",\"successIcon\":\"RegisterForm_successIcon__J33Wc\",\"errorIcon\":\"RegisterForm_errorIcon__HFULE\",\"messageErr\":\"RegisterForm_messageErr__-+9wz\",\"messageSec\":\"RegisterForm_messageSec__nVTAy\"};","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport { toast } from 'react-toastify';\nimport { BgImageWrapper} from '../../components/BgImageWrapper/BgImageWrapper';\nimport { Icon } from '../../components/Icon/Icon';\nimport { logIn, registerUser} from '../../redux/Auth/operations';\nimport { signUpSchema, signInSchema } from '../../schemas/validationSchema';\nimport s from './RegisterForm.module.css';\n\nconst RegisterForm = ({ signUp }) => {\n  const [showPass, setShowPass] = useState(false);\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors, dirtyFields },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(signUp ? signUpSchema : signInSchema),\n  });\n  let navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const inputClass = fieldName => {\n    return classNames({\n      [`${s.input}`]: true,\n      [`${s.errorInput}`]: errors[fieldName]?.message && dirtyFields[fieldName],\n      [`${s.successInput}`]:\n        !errors[fieldName]?.message && dirtyFields[fieldName],\n    });\n  };\n\n  const renderMessage = fieldName => {\n    if (errors[fieldName]?.message && dirtyFields[fieldName]) {\n      return <p className={s.messageErr}>{errors[fieldName]?.message}</p>;\n    }\n    return (\n      <p className={s.messageSec}>\n        {!errors[fieldName]?.message && dirtyFields[fieldName]\n          ? `${fieldName.charAt(0).toUpperCase()}${fieldName.slice(\n              1\n            )} is entered correct`\n          : ''}\n      </p>\n    );\n  };\n\n  const onSubmit = data => {\n    const { name, email, password } = data;\n\n    const userData = {\n      email,\n      password,\n    };\n\n    if (signUp) {\n      userData.name = name;\n    }\n\n    dispatch(signUp ? registerUser(userData) : logIn(userData))\n      .unwrap()\n      .then(userName => {\n        reset();\n        toast.success(\n          signUp\n            ? `Welcome, ${userName.name}!`\n            : `Welcome, ${userName.user.name}!`\n        );\n        signUp && navigate('/login');\n      })\n      .catch(error => {\n        if (error.response.status === 400) {\n          toast.error('Invalid data. Please check your input.');\n        } else if (error.response.status === 409) {\n          toast.error('User already exists. Please choose a different email.');\n        } else if (error.response.status === 403) {\n          toast.error('Invalid password.');\n        } else {\n          toast.error('An error occurred. Please try again later.');\n        }\n      });\n  };\n\n  return (\n    <div className={s.container}>\n      <div className={s.containerImg}>\n        <BgImageWrapper />\n      </div>\n      <div>\n        <div className={s.containerTitle}>\n          <h2 className={s.title}>{signUp ? 'Sign Up' : 'Sign In'}</h2>\n          <p className={s.text}>\n            {signUp\n              ? 'Step into a world of hassle-free expense management! Your journey towards financial mastery begins here.'\n              : 'Welcome back to effortless expense tracking! Your financial dashboard awaits.'}\n          </p>\n        </div>\n        <div className={s.containerForm}>\n          <div className={s.container}>\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n              {signUp && (\n                <div className={s.containerIcon}>\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className={inputClass('name')}\n                    {...register('name')}\n                  />\n                  {!errors.name?.message && dirtyFields.name && (\n                    <Icon name=\"success\" size=\"16\" className={s.successIcon} />\n                  )}\n                  {errors.name?.message && dirtyFields.name && (\n                    <Icon name=\"error\" size=\"16\" className={s.errorIcon} />\n                  )}\n                  {renderMessage('name')}\n                </div>\n              )}\n\n              <div className={s.containerIcon}>\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  className={inputClass('email')}\n                  {...register('email')}\n                />\n                {!errors.email?.message && dirtyFields.email && (\n                  <Icon name=\"success\" size=\"16\" className={s.successIcon} />\n                )}\n                {errors.email?.message && dirtyFields.email && (\n                  <Icon name=\"error\" size=\"16\" className={s.errorIcon} />\n                )}\n                {renderMessage('email')}\n              </div>\n              <div>\n                <div className={s.containerIcon}>\n                  <input\n                    name=\"password\"\n                    type={showPass ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                    className={inputClass('password')}\n                    {...register('password')}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPass(prev => !prev)}\n                  >\n                    {showPass ? (\n                      <Icon name=\"eye\" className={s.icon} size=\"16\" />\n                    ) : (\n                      <Icon name=\"eye-off\" className={s.icon} size=\"16\" />\n                    )}\n                  </button>\n                  {renderMessage('password')}\n                </div>\n              </div>\n              <div className={s.containerButton}>\n                <button type=\"submit\" className={s.button}>\n                  {signUp ? 'Sign Up' : 'Sign In'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className={s.containerLink}>\n          <NavLink className={s.link} to={signUp ? '/login' : '/register'}>\n            {signUp ? 'Already have an account?' : \"Don't have an account?\"}{' '}\n            <span className={s.span}>{signUp ? 'Sign In' : 'Sign Up'}</span>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;","// extracted by mini-css-extract-plugin\nexport default {\"mainBox\":\"CategoriesModal_mainBox__JdQNl\",\"box\":\"CategoriesModal_box__moVnZ\",\"mainTitle\":\"CategoriesModal_mainTitle__w+O3g\",\"title\":\"CategoriesModal_title__v26Dw\",\"listWrapper\":\"CategoriesModal_listWrapper__4UAXh\",\"noobjects\":\"CategoriesModal_noobjects__m3nFr\",\"noobjectsP\":\"CategoriesModal_noobjectsP__1ttt-\",\"listItem\":\"CategoriesModal_listItem__St44K\",\"listSVG\":\"CategoriesModal_listSVG__yuU8Z\",\"buttonSVG\":\"CategoriesModal_buttonSVG__d8trh\",\"icon\":\"CategoriesModal_icon__Ms2RG\",\"labelCategory\":\"CategoriesModal_labelCategory__8pTLk\",\"inputCategory\":\"CategoriesModal_inputCategory__Q9yU6\",\"subbmitButton\":\"CategoriesModal_subbmitButton__DAqH0\",\"formStyle\":\"CategoriesModal_formStyle__VUSsJ\",\"inputBox\":\"CategoriesModal_inputBox__9w9L2\"};","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addCategory, deleteCategory, editCategory } from '../../redux/Category/operations';\nimport { selectCategories } from '../../redux/Category/categorySlice';\nimport { Icon } from '../../components/Icon/Icon';\nimport s from './CategoriesModal.module.css';\nimport { getTransactions } from '../../redux/Transaction/operations';\n\nexport const CategoriesModal = ({ type, transportCategory }) => {\n  const categories = useSelector(selectCategories);\n\n  const dispatch = useDispatch();\n  const ulRef = useRef(null);\n\n  const [categoryName, setCategoryName] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [categoryId, setCategoryId] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const handleSubmitCategory = e => {\n    e.preventDefault();\n    if (categoryName.length > 16) {\n      toast.error(\n        'Category name length must be less than or equal to 16 characters long'\n      );\n      return;\n    }\n\n    if (isEditMode) {\n      dispatch(editCategory({ categoryName, categoryId }))\n        .unwrap()\n        .then(() => {\n          dispatch(getTransactions({ type }));\n          setIsEditMode(false);\n        })\n        .catch(error => toast.error('Error editing category'));\n    } else {\n      dispatch(addCategory({ type, categoryName }))\n        .unwrap()\n        .then(() => {\n          toast.success('New Category added successfully');\n\n          ulRef.current.scrollTo({\n            top: ulRef.current.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => toast.error('Error adding category'));\n    }\n    setCategoryName('');\n  };\n\n  const handleInputChange = event => {\n    setCategoryName(event.target.value);\n  };\n\n  const handleChangeCategory = (id, categoryName) => {\n    setCategoryName(categoryName);\n    setCategoryId(id);\n\n    setIsEditMode(true);\n  };\n\n  const handleGetCategory = item => {\n    transportCategory(item);\n  };\n\n  const handleDeleteCategory = (id, type) => {\n    setIsEditMode(false);\n    setIsButtonDisabled(true);\n\n    dispatch(deleteCategory({ id, type }))\n      .unwrap()\n      .then(() => toast.success('Category deleted successfully'))\n      .catch(error => {\n        toast.error('Cannot delete category with existing transactions');\n      })\n      .finally(setIsButtonDisabled(false));\n  };\n  useEffect(() => {\n    if (!isEditMode) {\n      setCategoryName('');\n    }\n  }, [isEditMode]);\n\n  return (\n    <div className={s.mainBox}>\n      <div className={s.box}>\n        <h2 className={s.mainTitle}>\n          {type === 'expenses' ? 'Expenses' : 'Incomes'}\n        </h2>\n        <h3 className={s.title}>All Category</h3>\n\n        <ul className={`${s.listWrapper} scroll scrollB`} ref={ulRef}>\n          {categories[type].length === 0 ? (\n            <li className={s.noobjects}>\n              <p className={s.noobjectsP}>There are no categories</p>\n            </li>\n          ) : (\n            categories[type].map(item => (\n              <li className={s.listItem} key={item._id}>\n                <p>{item.categoryName}</p>\n\n                <ul className={s.listSVG}>\n                  <li className={s.listSVGitem}>\n                    <button\n                      className={s.buttonSVG}\n                      onClick={() => handleGetCategory(item)}\n                    >\n                      <Icon className={s.icon} name=\"check\" size=\"16\" />\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={s.buttonSVG}\n                      onClick={() =>\n                        handleChangeCategory(item._id, item.categoryName)\n                      }\n                    >\n                      <Icon className={s.icon} name=\"edit\" size=\"16\" />\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={s.buttonSVG}\n                      onClick={() => handleDeleteCategory(item._id, type)}\n                      disabled={isButtonDisabled}\n                    >\n                      <Icon className={s.icon} name=\"trash-bin\" size=\"16\" />\n                    </button>\n                  </li>\n                </ul>\n              </li>\n            ))\n          )}\n        </ul>\n      </div>\n\n      <form className={s.formStyle} onSubmit={handleSubmitCategory}>\n        <label className={s.labelCategory} htmlFor=\"categoryInput\">\n          {isEditMode ? 'Edit Category' : 'New Category'}\n        </label>\n        <div className={s.inputBox}>\n          <input\n            type=\"text\"\n            id=\"categoryInput\"\n            placeholder=\"Enter the text\"\n            className={s.inputCategory}\n            onChange={handleInputChange}\n            value={categoryName}\n          />\n\n          <button\n            className={s.subbmitButton}\n            type=\"submit\"\n            disabled={categoryName.length === 0}\n          >\n            {isEditMode ? 'Edit' : 'Add'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"TransactionForm_formWrapper__dJW4L\",\"transactionForm\":\"TransactionForm_transactionForm__sq0n7\",\"commentField\":\"TransactionForm_commentField__jz17L\",\"typeLabel\":\"TransactionForm_typeLabel__xEpZh\",\"transactionTypes\":\"TransactionForm_transactionTypes__+X4q-\",\"customRadioBtn\":\"TransactionForm_customRadioBtn__LqsSV\",\"radioLabel\":\"TransactionForm_radioLabel__G3oR-\",\"radioBtn\":\"TransactionForm_radioBtn__02koV\",\"customFields\":\"TransactionForm_customFields__ZH0up\",\"customField\":\"TransactionForm_customField__R60kZ\",\"datePicker\":\"TransactionForm_datePicker__zE4sc\",\"datepickerContainer\":\"TransactionForm_datepickerContainer__NhIVf\",\"react-datepicker__calendar\":\"TransactionForm_react-datepicker__calendar__OSKfp\",\"timeField\":\"TransactionForm_timeField__zhVdO\",\"categoryField\":\"TransactionForm_categoryField__rZdjV\",\"fieldWrapper\":\"TransactionForm_fieldWrapper__rFSik\",\"sumLabel\":\"TransactionForm_sumLabel__W2tJp\",\"iconDate\":\"TransactionForm_iconDate__ygxny\",\"iconTime\":\"TransactionForm_iconTime__F8-gz\",\"sumInput\":\"TransactionForm_sumInput__4jseR\",\"currency\":\"TransactionForm_currency__wL7Ly\",\"submitBtn\":\"TransactionForm_submitBtn__YfJho\",\"errorField\":\"TransactionForm_errorField__aGdMb\",\"messageError\":\"TransactionForm_messageError__0Ha4P\"};","import { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useModal } from 'hooks';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Icon, Modal } from 'components';\nimport { CategoriesModal } from '../CatergoriesModal/CategoriesModal';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { getFormattedDate, getFormattedTime } from '../../javascripts';\nimport { selectTransactionsError } from '../../redux/Transaction/TransactionSlice';\nimport { transactionSchema } from '../../schemas/validationSchema';\n// import './DatePicke.css';\nimport s from './TransactionForm.module.css';\n\nexport const TransactionForm = ({\n  transaction,\n  transactionsType,\n  onSubmitForm,\n  history,\n}) => {\n  const user = useSelector(selectUser);\n  const isError = useSelector(selectTransactionsError);\n  const { currency } = user;\n  const [categoryId, setCategoryId] = useState('');\n  const [isOpenModalTransaction, toggleModalTransaction] = useModal();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    getValues,\n    control,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(transactionSchema),\n  });\n  const navigate = useNavigate();\n\n  const clearFieldCategory = useCallback(\n    type => {\n      setValue('category', '');\n      setCategoryId('');\n      navigate(`/transactions/${type}`);\n    },\n    [setValue, setCategoryId, navigate]\n  );\n\n  const setDefaultValues = useCallback(() => {\n    setValue('type', transactionsType);\n    setValue('date', getFormattedDate(new Date()));\n    setValue('time', getFormattedTime());\n    setValue('category', '');\n    setCategoryId('');\n    setValue('sum', '');\n    setValue('comment', '');\n    clearErrors();\n  }, [setValue, setCategoryId, transactionsType, clearErrors]);\n\n  useEffect(() => {\n    if (!transaction) {\n      setDefaultValues();\n    }\n\n    if (transaction) {\n      const { type, date, time, category, sum, comment } = transaction;\n\n      setCategoryId(category?._id);\n      setValue('type', type);\n      setValue('date', date);\n      setValue('time', time);\n      setValue('category', category.categoryName);\n      setValue('sum', sum);\n      setValue('comment', comment);\n    }\n  }, [transaction, setValue, setDefaultValues]);\n\n  const handleChangeCategory = item => {\n    setValue('category', item.categoryName, { shouldValidate: true });\n    setCategoryId(item._id);\n    toggleModalTransaction();\n  };\n\n  const handleChangeDate = date => {\n    const formattedDate = getFormattedDate(date);\n    setValue('date', formattedDate, { shouldValidate: true });\n  };\n\n  const onSubmit = data => {\n    data.category = categoryId;\n\n    if (transaction) {\n      data._id = transaction._id;\n    }\n\n    onSubmitForm(data);\n\n    if (!isError && !transaction) {\n      reset();\n      setDefaultValues();\n    }\n  };\n\n  const fieldClasses = fieldName => {\n    return classNames({\n      [`${\n        s[fieldName !== 'date' ? `${fieldName + 'Field'}` : 'datePicker']\n      }`]: true,\n      [`${s.errorField}`]: errors[fieldName]?.message,\n    });\n  };\n\n  const renderMessage = fieldName => {\n    if (errors[fieldName]?.message) {\n      return <p className={s.messageError}>{errors[fieldName]?.message}</p>;\n    }\n  };\n\n  const radioBtnExpenses = classNames({\n    [`${s.typeLabel}`]: true,\n    [`${s.radioLabel}`]:\n      transaction?.type === 'incomes' || history === 'incomes',\n  });\n\n  const radioBtnIncomes = classNames({\n    [`${s.typeLabel}`]: true,\n    [`${s.radioLabel}`]:\n      transaction?.type === 'expenses' || history === 'expenses',\n  });\n\n  return (\n    <div>\n      <div className={s.formWrapper}>\n        <form className={s.transactionForm} onSubmit={handleSubmit(onSubmit)}>\n          <div className={s.transactionTypes}>\n            <label className={radioBtnExpenses}>\n              <input\n                className={s.radioBtn}\n                type=\"radio\"\n                name=\"type\"\n                value=\"expenses\"\n                {...register('type')}\n                disabled={\n                  transaction?.type === 'incomes' || history === 'incomes'\n                }\n                onChange={() => clearFieldCategory('expenses')}\n              />\n              <span className={s.customRadioBtn}></span>\n              Expense\n            </label>\n            <label className={radioBtnIncomes}>\n              <input\n                className={s.radioBtn}\n                type=\"radio\"\n                name=\"type\"\n                value=\"incomes\"\n                {...register('type')}\n                disabled={\n                  transaction?.type === 'expenses' || history === 'expenses'\n                }\n                onChange={() => clearFieldCategory('incomes')}\n              />\n              <span className={s.customRadioBtn}></span>\n              Income\n            </label>\n          </div>\n          <div className={s.customFields}>\n            <label className={s.customField}>\n              Date\n              <Controller\n                control={control}\n                name=\"date\"\n                render={({ field }) => (\n                  <div className=\"datepickerContainer\">\n                    <DatePicker\n                      className={fieldClasses('date')}\n                      showPopperArrow={false}\n                      maxDate={new Date()}\n                      selected={field.value}\n                      placeholderText=\"mm/dd/yyyy\"\n                      onChange={date => {\n                        field.onChange(date);\n                        handleChangeDate(date);\n                      }}\n                      calendarClassName=\"fixed-height-calendar\"\n                    />\n                  </div>\n                )}\n              />\n              <Icon name=\"calendar\" className={s.iconDate} size=\"16\" />\n              {renderMessage('date')}\n            </label>\n            <label className={s.customField}>\n              Time\n              <input\n                className={fieldClasses('time')}\n                type=\"time\"\n                name=\"time\"\n                {...register('time')}\n              />\n              <Icon name=\"clock\" className={s.iconTime} size=\"16\" />\n              {renderMessage('time')}\n            </label>\n          </div>\n          <div className={s.fieldWrapper}>\n            <label>Category</label>\n            <input\n              className={fieldClasses('category')}\n              type=\"text\"\n              name=\"category\"\n              placeholder=\"Different\"\n              autoComplete=\"off\"\n              {...register('category')}\n              required\n              readOnly\n              onClick={toggleModalTransaction}\n            />\n            {renderMessage('category')}\n          </div>\n          <div>\n            <label className={s.sumLabel}>\n              Sum\n              <input\n                className={fieldClasses('sum')}\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"Enter the sum\"\n                autoComplete=\"off\"\n                {...register('sum')}\n              />\n              <span className={s.currency}>{currency?.toUpperCase()}</span>\n              {renderMessage('sum')}\n            </label>\n          </div>\n          <div className={s.fieldWrapper}>\n            <label>Comment</label>\n            <textarea\n              className={fieldClasses('comment')}\n              name=\"comment\"\n              placeholder=\"Enter the text\"\n              {...register('comment')}\n            />\n            {renderMessage('comment')}\n          </div>\n          <button\n            className={s.submitBtn}\n            type=\"submit\"\n            disabled={Object.entries(errors).length}\n          >\n            {transaction ? 'Save' : 'Add'}\n          </button>\n        </form>\n      </div>\n      {isOpenModalTransaction && (\n        <Modal toggleModal={toggleModalTransaction}>\n          <CategoriesModal\n            transportCategory={handleChangeCategory}\n            type={getValues('type')}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};","import { getColors } from './getColors';\nimport { getCurrentMoth } from './getCurrentMonth';\n\nexport function countCategories(data, total) {\n  if (!data.length) return [];\n\n  const categorySum = {};\n  const { firstDayOfMonth, lastDayOfMonth } = getCurrentMoth();\n\n  const currentMonthTransactions = data.filter(\n    item => item.date >= firstDayOfMonth && item.date <= lastDayOfMonth\n  );\n\n  if (!currentMonthTransactions.length) return [];\n\n  currentMonthTransactions.forEach(transaction => {\n    const { category, sum } = transaction;\n    if (categorySum[category.categoryName]) {\n      categorySum[category.categoryName] += sum;\n    } else {\n      categorySum[category.categoryName] = sum;\n    }\n  });\n\n  const categoriesData = [];\n\n  Object.entries(categorySum).forEach(([key, value]) => {\n    let percent = Number(((value / total) * 100).toFixed(1));\n    categoriesData.push({ name: key, value: percent });\n  });\n\n  const sumPercentages = categoriesData.reduce(\n    (total, item) => total + item.value,\n    0\n  );\n\n  const sortedCategories = categoriesData.sort((a, b) => b.value - a.value);\n\n  if (sumPercentages !== 100) {\n    const diff = 100 - sumPercentages;\n\n    if (sortedCategories[sortedCategories.length - 1].value > 1) {\n      sortedCategories[sortedCategories.length - 1].value = Number(\n        (sortedCategories[sortedCategories.length - 1].value + diff).toFixed(1)\n      );\n    } else {\n      sortedCategories[sortedCategories.length - 1].value = 0.1;\n    }\n  }\n\n  return getColors(sortedCategories);\n}","import { endOfMonth, format, startOfMonth } from 'date-fns';\n\nexport function getCurrentMoth() {\n  const currentDate = new Date();\n  const firstDayOfMonth = format(startOfMonth(currentDate), 'yyyy-MM-dd');\n  const lastDayOfMonth = format(endOfMonth(currentDate), 'yyyy-MM-dd');\n\n  return { firstDayOfMonth, lastDayOfMonth };\n}","export function getColors(data) {\n\n    const colors = [\n      '#008000 ',\n      '#32CD32',\n      '#00FA9A',\n      '#98FB98',\n      '#228B22',\n      '#2E8B57',\n      '#3CB371',\n      '#00FF7F',\n      '#66CDAA',\n      '#8FBC8F',\n      '#2F4F4F',\n      '#aabaaa',\n      '#dbf0db',\n      '#777f77',\n      '#5a5e5a',\n    ];\n  \n    data.map((item, index) => (item.color = colors[index]));\n  \n    return data;\n  }","// extracted by mini-css-extract-plugin\nexport default {\"chartContainer\":\"TransactionsChart_chartContainer__Dm1QE\",\"title\":\"TransactionsChart_title__HJ11O\",\"statsWrapper\":\"TransactionsChart_statsWrapper__HcGTQ\",\"pieChartWrapper\":\"TransactionsChart_pieChartWrapper__g1yw6\",\"chartDescr\":\"TransactionsChart_chartDescr__65Wcs\",\"list\":\"TransactionsChart_list__X+rU0\",\"listItem\":\"TransactionsChart_listItem__JJwTm\",\"wrapperMarker\":\"TransactionsChart_wrapperMarker__Zw1W2\",\"itemDescr\":\"TransactionsChart_itemDescr__nrjb-\",\"itemSpan\":\"TransactionsChart_itemSpan__Hm8D6\",\"warningWrapper\":\"TransactionsChart_warningWrapper__levm-\",\"warningTitle\":\"TransactionsChart_warningTitle__1Dkxd\",\"imgNoData\":\"TransactionsChart_imgNoData__wc4-e\",\"imgNoTransactions\":\"TransactionsChart_imgNoTransactions__+BFMx\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { Chart } from '../PieChart/PieChart';\nimport { countCategories } from '../../javascripts/countCategories';\nimport { selectTransactions, selectTransactionsError } from '../../redux/Transaction/TransactionSlice';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { fetchCurrentUser } from '../../redux/User/operations';\nimport warningImg from '../../assets/images/no_data_abstract.png';\nimport errorImg from '../../assets/images/server-error.png';\nimport s from './TransactionsChart.module.css';\n\nexport const TransactionsChart = ({ transactionsType }) => {\n  const [categoriesData, setCategoriesData] = useState(null);\n  const dispatch = useDispatch();\n\n  const { totalIncomes, totalExpenses } = useSelector(selectUser);\n  const error = useSelector(selectTransactionsError);\n  const data = useSelector(selectTransactions);\n\n  const totalRef = useRef(\n    transactionsType === 'Incomes' ? totalIncomes : totalExpenses\n  );\n\n  useEffect(() => {\n    totalRef.current =\n      transactionsType === 'Incomes' ? totalIncomes : totalExpenses;\n  }, [totalIncomes, totalExpenses, transactionsType]);\n\n  useEffect(() => {\n    if (data === null) return;\n\n    dispatch(fetchCurrentUser())\n      .unwrap()\n      .then(() => {\n        setCategoriesData(countCategories(data, totalRef.current));\n      })\n      .catch();\n  }, [data, dispatch]);\n\n  if (data === null || categoriesData === null) return;\n\n  if (error)\n    return (\n      <div className={s.warningWrapper}>\n        <h2 className={s.warningTitle}>\n          Sorry, something went wrong. Please try again...\n        </h2>\n        <img className={s.imgNoData} src={errorImg} alt=\"Error fetch\" />\n      </div>\n    );\n\n  return !categoriesData.length ? (\n    <div className={s.warningWrapper}>\n      <h2 className={s.warningTitle}>\n        You don't have any {transactionsType.toLowerCase()} in this month.\n      </h2>\n      <img className={s.imgNoTransactions} src={warningImg} alt=\"No data\" />\n    </div>\n  ) : (\n    <div className={s.chartContainer}>\n      <h3 className={s.title}>{transactionsType} categories</h3>\n      <div className={s.statsWrapper}>\n        <div className={s.pieChartWrapper}>\n          <Chart data={categoriesData} />\n          <p className={s.chartDescr}>100%</p>\n        </div>\n        <ul className={`${s.list} scroll scrollA`}>\n          {categoriesData.map((item, index) => (\n            <li className={s.listItem} key={index}>\n              <div\n                className={s.wrapperMarker}\n                style={{ backgroundColor: item.color }}\n              ></div>\n              <p className={s.itemDescr}>{item.name}</p>\n              <p className={s.itemSpan}>{item.value}%</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"TransactionsTotal_link__2Zd-o\",\"iconContainer\":\"TransactionsTotal_iconContainer__hBCHo\",\"icon\":\"TransactionsTotal_icon__ibCfE\",\"list\":\"TransactionsTotal_list__No+i2\",\"listItem\":\"TransactionsTotal_listItem__Wuqp-\",\"amountTitle\":\"TransactionsTotal_amountTitle__xm2gd\",\"amountDescr\":\"TransactionsTotal_amountDescr__ck70l\"};","import { Link, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { Icon } from 'components';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { getCurrencyChar, getPath } from '../../javascripts';\n\nimport s from './TransactionsTotal.module.css';\n\nexport const TransactionsTotal = ({\n  totalAllExpenses = null,\n  totalAllIncomes = null,\n}) => {\n  const [path, setPath] = useState({});\n  const location = useLocation();\n\n  const { totalIncomes, totalExpenses, currency } = useSelector(selectUser);\n  const currencyChar = getCurrencyChar(currency);\n\n  useEffect(() => {\n    setPath(getPath(location));\n  }, [location]);\n\n  return (\n    <div className={s.wrapper}>\n      <ul className={s.list}>\n        <li className={s.listItem}>\n          <Link className={s.link} to={path.incomes}>\n            <div className={s.iconContainer}>\n              <Icon className={s.icon} name=\"arrow-up\" size=\"18\" />\n            </div>\n          </Link>\n          <div>\n            <h3 className={s.amountTitle}>Total Income</h3>\n            <p className={s.amountDescr}>\n              {currencyChar}\n              {totalAllIncomes || totalIncomes}\n            </p>\n          </div>\n        </li>\n        <li className={s.listItem}>\n          <Link className={s.link} to={path.expenses}>\n            <div className={s.iconContainer}>\n              <Icon className={s.icon} name=\"arrow-down\" size=\"18\" />\n            </div>\n          </Link>\n          <div>\n            <h3 className={s.amountTitle}>Total Expense</h3>\n            <p className={s.amountDescr}>\n              {currencyChar}\n              {totalAllExpenses || totalExpenses}\n            </p>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"UniversalButton_button__Lr2wi\",\"btnIcon\":\"UniversalButton_btnIcon__xP+G4\"};","import { GrPowerReset } from 'react-icons/gr';\nimport { MdAddCard } from 'react-icons/md';\nimport s from './UniversalButton.module.css';\n\nexport const UniversalButton = ({ action, type }) => {\n  return (\n    <button onClick={action} type=\"button\" className={s.button}>\n      {type === 'reset' ? (\n        <GrPowerReset className={s.btnIcon} />\n      ) : (\n        <MdAddCard className={s.btnIcon} />\n      )}\n    </button>\n  );\n};","export function getPath(location) {\n    const path = {};\n    if (\n      location.pathname === '/transactions/incomes' ||\n      location.pathname === '/transactions/expenses'\n    ) {\n      path.expenses = '/transactions/expenses';\n      path.incomes = '/transactions/incomes';\n    } else {\n      path.expenses = '/transactions/history/expenses';\n      path.incomes = '/transactions/history/incomes';\n    }\n    return path;\n  }","export function getCurrencyChar(currency) {\n    switch (currency) {\n      case 'php':\n        return '₱';\n      case 'usd':\n        return '$';\n      case 'eur':\n        return '€';\n      default:\n        break;\n    }\n  }","export const getFormattedDate = date => {\n    if (!date) return;\n  \n    if (typeof date === 'string') {\n      const parts = date.split('-');\n      const year = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10) - 1;\n      const day = parseInt(parts[2], 10);\n  \n      return new Date(year, month, day);\n    }\n  \n    const year = date.getFullYear();\n    let month = (date.getMonth() + 1).toString().padStart(2, '0');\n    let day = date.getDate().toString().padStart(2, '0');\n  \n    return `${year}-${month}-${day}`;\n  };","export const getFormattedTime = () => {\n    const currentDate = new Date();\n    const hours = String(currentDate.getHours()).padStart(2, '0');\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\n  \n    return `${hours}:${minutes}`;\n  };","import * as yup from 'yup';\n\nexport const signUpSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .min(2, 'Min length must be more than 2 chars')\n    .max(32, 'Max length must be less than 32 chars'),\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const transactionSchema = yup.object({\n  date: yup.string().required('Date is required'),\n  time: yup.string().required('Time is required'),\n  category: yup.string().required('Category is required'),\n  sum: yup\n    .string()\n    .matches(/^[1-9][0-9]*$/, 'Sum must be greater than 0')\n    .test('max', 'Sum must be less than or equal to 1000000', value => {\n      if (!value) return true;\n      const parsedValue = parseInt(value, 10);\n      return !isNaN(parsedValue) && parsedValue <= 1000000;\n    })\n    .required('Sum is required'),\n  comment: yup\n    .string()\n    .required('Comment is required')\n    .min(3, 'Comment length must be at least 3 characters long'),\n});"],"names":["BgImageWrapper","currentStep","setCurrentStep","useState","animationDuration","randomSum","setRandomSum","randomPercent","setRandomPercent","animationRef","useRef","startTimeRef","viewportWidthRef","window","innerWidth","useEffect","Math","random","toFixed","updateAnimationProgress","percentage","performance","now","current","updateCurrentStep","requestAnimationFrame","prevStep","newStep","ceil","_jsx","className","s","children","_jsxs","onAnimationStart","handleAnimationStart","viewportWidth","Icon","name","size","Chart","_ref","data","chartData","useMemo","PieChart","width","height","Pie","dataKey","startAngle","endAngle","cy","innerRadius","outerRadius","paddingAngle","cornerRadius","fill","stroke","map","entry","index","Cell","style","outline","color","_errors$name","_errors$name2","_errors$email","_errors$email2","signUp","showPass","setShowPass","register","reset","handleSubmit","formState","errors","dirtyFields","useForm","mode","resolver","yupResolver","signUpSchema","signInSchema","navigate","useNavigate","dispatch","useDispatch","inputClass","fieldName","_errors$fieldName","_errors$fieldName2","classNames","message","renderMessage","_errors$fieldName3","_errors$fieldName5","_errors$fieldName4","charAt","toUpperCase","slice","onSubmit","email","password","userData","registerUser","logIn","unwrap","then","userName","toast","user","catch","error","response","status","type","placeholder","onClick","prev","NavLink","to","CategoriesModal","transportCategory","categories","useSelector","selectCategories","ulRef","categoryName","setCategoryName","isButtonDisabled","setIsButtonDisabled","categoryId","setCategoryId","isEditMode","setIsEditMode","ref","length","item","handleGetCategory","handleChangeCategory","id","_id","handleDeleteCategory","deleteCategory","finally","disabled","e","preventDefault","editCategory","getTransactions","addCategory","scrollTo","top","scrollHeight","behavior","htmlFor","onChange","event","target","value","TransactionForm","transaction","transactionsType","onSubmitForm","history","selectUser","isError","selectTransactionsError","currency","isOpenModalTransaction","toggleModalTransaction","useModal","setValue","getValues","control","clearErrors","transactionSchema","clearFieldCategory","useCallback","setDefaultValues","getFormattedDate","Date","getFormattedTime","date","time","category","sum","comment","fieldClasses","radioBtnExpenses","radioBtnIncomes","Controller","render","_ref2","field","DatePicker","showPopperArrow","maxDate","selected","placeholderText","formattedDate","shouldValidate","handleChangeDate","calendarClassName","autoComplete","required","readOnly","Object","entries","Modal","toggleModal","countCategories","total","categorySum","firstDayOfMonth","lastDayOfMonth","currentDate","format","startOfMonth","endOfMonth","getCurrentMoth","currentMonthTransactions","filter","forEach","categoriesData","key","percent","Number","push","sumPercentages","reduce","sortedCategories","sort","a","b","diff","colors","getColors","TransactionsChart","setCategoriesData","totalIncomes","totalExpenses","selectTransactions","totalRef","fetchCurrentUser","src","errorImg","alt","backgroundColor","toLowerCase","warningImg","TransactionsTotal","totalAllExpenses","totalAllIncomes","path","setPath","location","useLocation","currencyChar","getCurrencyChar","getPath","Link","incomes","expenses","UniversalButton","action","GrPowerReset","MdAddCard","pathname","parts","split","year","parseInt","month","day","getFullYear","getMonth","toString","padStart","getDate","String","getHours","getMinutes","yup","min","max","shape","matches","test","parsedValue","isNaN"],"sourceRoot":""}